esphome:
  name: "syssi-collector"
  friendly_name: syssi_collector
  min_version: 2024.6.0
  name_add_mac_suffix: false
  platformio_options:
     board_build.flash_mode: dio # Needed to flash the ESP32-S3 and prevent reboot loop
  on_boot:
    then:
      - light.turn_on:
          id: ${led_id}
          red: 100%
          blue: 0%
          green: 0%
          brightness: 30%
          effect: pulse
      - delay: 3s
      - light.turn_on:
          id: ${led_id}
          red: 0%
          blue: 100%
          green: 0%
          brightness: 30%
          effect: pulse
      - delay: 3s
      - light.turn_on:
          id: ${led_id}
          red: 0%
          blue: 0%
          green: 100%
          brightness: 30%
          effect: pulse
      - delay: 3s
      - light.turn_off:
          id: ${led_id}

substitutions:
  name: collector
  bms_name: bms0
  inv_name: anenji
  led_id: esp_light
  smg_tx_pin: GPIO08
  smg_rx_pin: GPIO07
  bms_tx_pin: GPIO05
  bms_rx_pin: GPIO06

esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino
    version: latest

wifi:
  ssid: !secret wifi_ssid
  password: !secret wifi_password
  ap:
    ssid: "syssi_collector Fallback Hotspot"
    password: "fJkEIVMYQnYE"

# Enable Home Assistant API
api:

# Allow Over-The-Air updates
ota:
- platform: esphome

logger:
  level: INFO

external_components:
  # - source: github://syssi/esphome-jk-bms@main
  #   refresh: 0s
  - source: github://txubelaxu/esphome-jk-bms@main
    refresh: 0s
    components: 
      - jk_rs485_sniffer
      - jk_rs485_bms

packages:
  remote_package_files:
    url: https://github.com/dct-leni/syssi_collector
    files: 
      - smg_ii_sensors.yaml
      - jk_pb_sensors.yaml
      # - jk_bms_sensors.yaml
    ref: main  # optional
    refresh: 0s

time:
  - platform: sntp

# UART for SMG-II
uart:
  - id: uart_smg
    baud_rate: 9600
    tx_pin: ${smg_tx_pin}
    rx_pin: ${smg_rx_pin}

# UART for JK-BMS
  - id: uart_bms
    baud_rate: 115200
    rx_buffer_size: 500 # 384
    tx_pin: ${bms_tx_pin}
    rx_pin: ${bms_rx_pin}

modbus:
  # - id: modbus_bms
  #   uart_id: uart_bms
  #   flow_control_pin: GPIO12
  - id: modbus_smg
    uart_id: uart_smg
    send_wait_time: 200ms

modbus_controller:
  # - id: bms0
  #   # Dip switch configuration of a single pack setup / address 0x01
  #   #  1    2    4    5
  #   #  on, off, off, off (0x01)
  #   #
  #   # Don't turn off all dip switches / don't use device address 0x00.
  #   # This is the Modbus Master mode. You must select a device address
  #   # between 0x01 and 0x0f so the BMS acts as Modbus Slave.
  #   address: 0x01
  #   modbus_id: modbus_bms
  #   setup_priority: -10
  #   update_interval: 5s
  #   command_throttle: 50ms
  - id: smg0
    address: 0x01
    modbus_id: modbus_smg
    command_throttle: 200ms
    update_interval: 10s

jk_rs485_sniffer:
  - id: sniffer0
    protocol_version: "JK02_32S"
    rx_timeout: 500ms
    uart_id: uart_bms

jk_rs485_bms:
  - id: bms0
    rs485_address: 0x01
    jk_rs485_sniffer_id: sniffer0
    update_interval: 30s

light:
  # https://esphome.io/components/light/esp32_rmt_led_strip
  # ESP Light used to see the inverter heartbeat
  # Internal : only specifying an id without a name will implicitly set this to true.
  - platform: esp32_rmt_led_strip
    id: ${led_id}
    rgb_order: GRB
    pin: 21
    num_leds: 1
    rmt_channel: 0
    chipset: ws2812
    entity_category: config
    effects:
      - pulse:
          transition_length: 350ms
          update_interval: 350ms

button:
  # https://esphome.io/components/button/restart
  - platform: restart
    name: ${name} ESP32 Restart
    entity_category: config

sensor:
  # https://esphome.io/components/sensor/internal_temperature
  - platform: internal_temperature
    name: ${name} internal temperature
    id: esp32_internal_temperature
    update_interval: 10s
    entity_category: diagnostic


interval:
  - interval: 5s
    then:
      - light.turn_on:
          id: ${led_id}
          red: 0%
          blue: 0%
          green: 100%
          brightness: 30%
          effect: pulse
      - light.turn_off:
          id: ${led_id}

# <<: !include jk_bms_sensors.yaml
# <<: !include smg_ii_sensors.yaml